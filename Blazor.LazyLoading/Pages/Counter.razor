@page "/counter"    
@using System.Reflection;
@using Blazor.LazyLoading.Interfaces;
@inherits OwningComponentBase<ILazyLoadModules>

<PageTitle>Counter</PageTitle>

<h1>Counter</h1>

<p role="status">Current count: @currentCount</p>

<button class="btn btn-primary" @onclick="IncrementCount">Click me</button>

@if(Service.IsLoaded)
{
    <BlazorBasics.InputFileExtended.InputFileComponent />
}

@code {
    private int currentCount = 0;

    private void IncrementCount()
    {
        currentCount++;
    }

    public Counter()
    {
        Console.WriteLine("Loading page");
        // Service.LoadAssembliesAsync(
        //             new[] { "BlazorBasics.InputFileExtended.dll" });
    }

    protected override void OnInitialized()
    {
        Console.WriteLine("OnInitialized page 1");
        Service.LoadAssembliesAsync(
                    new[] { "BlazorBasics.InputFileExtended.dll" }).GetAwaiter().GetResult();
        Console.WriteLine("OnInitialized page 2");

    }


    // protected override async Task OnInitializedAsync()
    // {
    //     Console.WriteLine("OnInitialized page 1");
    //     await Service.LoadAssembliesAsync(
    //                 new[] { "BlazorBasics.InputFileExtended.dll" });
    //     Console.WriteLine("OnInitialized page 2");
        
    // }


    // private async Task OnNavigateAsync(NavigationContext args)
    // {
    //     try
    //     {
    //         if(args.Path == "counter")
    //         {
    //             IEnumerable<Assembly> assemblies = await AssemblyLoader.LoadAssembliesAsync(
    //                 new[] { "BlazorBasics.InputFileExtended.dll" });
    //             lazyLoadedAssemblies.AddRange(assemblies);
    //         }
    //     }
    //     catch(Exception ex)
    //     {
    //         Console.WriteLine("Error: {Message}", ex.Message);
    //     }
    // }
}
